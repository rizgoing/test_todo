{"version":3,"sources":["Components/AddTodoListForm/AddTodoListForm.jsx","Components/TodoLists/TodoLists.jsx","Pages/Homepage.jsx","Components/AddTodoItem/AddTodo.jsx","Components/Search/Search.jsx","Components/TodoList/TodoItem.jsx","Components/Filters/Filters.jsx","Components/TodoList/TodoList.jsx","App.js","serviceWorker.js","index.js"],"names":["AddTodoListForm","add","useState","itemName","setItemName","onSubmit","e","preventDefault","trim","console","log","className","type","autoFocus","required","autoComplete","value","placeholder","onChange","target","TodoLists","list","setList","todos","listItem","length","map","i","href","id","key","listname","Math","random","Homepage","AddTodo","todoItem","setTodoItem","Search","search","TodoItem","del","checked","index","onClick","todo","Filters","filter","htmlFor","defaultChecked","name","TodoList","setTodos","setSearch","setFilter","searchedTodos","toLowerCase","includes","filteredItems","todosDel","newTodos","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fac75d35.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddTodoListForm = ({ add }) => {\r\n    \r\n    const [itemName, setItemName] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const valtrim = itemName.trim()\r\n        valtrim !== '' ?  add(itemName) : console.log('');\r\n       \r\n        setItemName('');        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"add-lists-form\">\r\n            <input \r\n            className=\"input-list\"\r\n            type=\"text\" \r\n            autoFocus \r\n            required\r\n            autoComplete=\"off\"\r\n            value={itemName} \r\n            placeholder='New list...' \r\n            onChange={(e) => setItemName(e.target.value) } /><br/>\r\n            <input type=\"submit\" value=\"Create\" className=\"input-submit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodoListForm\r\n","import React, { useState } from 'react'\r\nimport AddTodoListForm from '../AddTodoListForm/AddTodoListForm';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst TodoLists = () => {\r\n    \r\n    const [list, setList] = useState([]);\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addListItem = (e) => {\r\n        \r\n            setList([...list, {\r\n                listname: e,\r\n                id: Math.random(),\r\n                todos: [todos],\r\n            }])\r\n        \r\n    }\r\n\r\n    const listItem = list.length ? (\r\n        list.map((i) => {\r\n            return (\r\n            <a href={`/list/${i.id}`} key={i.id}> <li > <span>{i.listname}</span> <span> (0/{i.todos.length}) </span> </li> </a>\r\n            );\r\n        })\r\n    ) : (<p>Add some todos lists..</p>);\r\n    \r\n    \r\n      \r\n    return (\r\n        \r\n        <div className='todo-lists-wrapper'>\r\n            <ul className=\"todo-lists\">\r\n            \r\n            {listItem}\r\n            \r\n            </ul>\r\n            <AddTodoListForm add={addListItem} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default TodoLists\r\n","import React from 'react'\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, { useState } from 'react'\r\n\r\n\r\nconst AddTodo = ({ add }) => {\r\n\r\n    const [todoItem, setTodoItem] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();  \r\n        const val = todoItem.trim()\r\n        val !== '' ?  add(todoItem) : console.log('');\r\n         \r\n        setTodoItem('')\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setTodoItem(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            autoFocus \r\n            required\r\n            autoComplete=\"off\"\r\n            value={todoItem} \r\n            placeholder='Add todo..' \r\n            onChange={handleChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nconst Search = ({ search }) => {\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" \r\n            placeholder=\"Search todo..\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => search(e.target.value)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst TodoItem = ({ todos, del, checked }) => {\r\n\r\n    const todoItem = \r\n      todos.length ? (\r\n        todos.map((i, index) => {\r\n            return(\r\n            <li key={i.id} >\r\n                <span \r\n                  className={i.checked ? 'completed' : ''}  \r\n                  onClick={() => {\r\n                    checked(index)\r\n        \r\n                    }}\r\n                  >{i.todo}\r\n                </span>\r\n                <button onClick={() => del(i.id)} className='delete-todo'>x</button>\r\n           </li>\r\n            )\r\n        })\r\n    ) : (<p>Nothing to do yet..</p>)\r\n\r\n    return (\r\n        <div>\r\n            {todoItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\n\r\nconst Filters = ({ filter }) => {\r\n    return (\r\n        <div className=\"filters\">\r\n            <label htmlFor=\"all\">\r\n                <input \r\n                  type=\"radio\" \r\n                  defaultChecked\r\n                  id=\"all\" \r\n                  name=\"filter\" \r\n                  value=\"all\" \r\n                  onClick={(e) => filter(e)} />All</label>\r\n            <label htmlFor=\"undone\">\r\n                <input \r\n                  type=\"radio\" \r\n                  id=\"undone\" \r\n                  name=\"filter\" \r\n                  value=\"undone\" \r\n                  onClick={(e) => filter(e)}/>Undone</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import React, { useState } from 'react'\r\nimport AddTodo from '../AddTodoItem/AddTodo';\r\nimport Search from '../Search/Search';\r\nimport TodoItem from './TodoItem';\r\nimport Filters from '../Filters/Filters';\r\n\r\n\r\nconst TodoList = () => {\r\n   \r\n    const [todos, setTodos] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [filter, setFilter] = useState(false);\r\n\r\n\r\n    const addTodo = (e) => {\r\n        setTodos([...todos, {\r\n            todo: e,\r\n            id: Math.random(),\r\n            checked: false,\r\n        }])\r\n    }\r\n\r\n    const completeTodo = (index) => {\r\n        const newTodos = [...todos];\r\n        newTodos[index].checked ? newTodos[index].checked = false : newTodos[index].checked = true;\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const deleteTodo = (id) => {\r\n\r\n        const todosDel = todos.filter((todo) => {\r\n            return (\r\n                todo.id !== id                \r\n            )\r\n        } )\r\n        \r\n        setTodos(todosDel);\r\n    \r\n    }\r\n\r\n    const handleSearch = e => setSearch(e);\r\n      \r\n    const searchedTodos = !search\r\n    ? todos\r\n    : todos.filter((todo) => {\r\n        return todo.todo.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n\r\n    const handleFilter = (e) => {\r\n        if (e.target.value === 'all') {\r\n            setFilter(false);\r\n        } else setFilter(true);\r\n        \r\n    }\r\n    \r\n    const filteredItems = filter\r\n           ? searchedTodos.filter((todo) => {\r\n             return todo.checked === false \r\n    }) : searchedTodos\r\n        \r\n    return (\r\n        <div className=\"todo-list-wrapper\">\r\n            <Search search={handleSearch} />\r\n            <Filters filter={handleFilter}/>\r\n              <ul className=\"todo-list\">\r\n                <TodoItem del={deleteTodo} todos={filteredItems}  checked={completeTodo} />\r\n              </ul>\r\n            <AddTodo add={addTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from \"react\";\n\nimport TodoLists from \"./Components/TodoLists/TodoLists\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Homepage from \"./Pages/Homepage\";\nimport TodoList from \"./Components/TodoList/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <TodoLists />\n      <Router>\n        <Switch>\n          <Homepage exact path=\"/\" component={Homepage} />\n          <TodoList path=\"/list/:id\" component={TodoList} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}